// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// generator custom_generator {
//   provider = "prisma-generator-fake-data"
//   output   = "../src/script/seed-data.ts"
// }

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id       String    @id @default(cuid())
  name     String?
  email    String    @unique
  password String
  image    String?
  accounts Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model FlightStatus {
  id String @id @default(cuid())

  arrivalPlace           String
  departurePlace         String
  arrivalGate            String
  departureGate          String
  status                 String
  arrivalTime            DateTime
  departureTime          DateTime
  scheduledDepartureTime DateTime
  scheduledArrivalTime   DateTime

  flight Flight @relation(fields: [fId], references: [id])
  fId    String @unique
}

enum Status {
  OnTime
  Delayed
  Arrived
  Cancelled
}

model Flight {
  id       String  @id @default(cuid())
  modal    String?
  airline  String  @default("Indigo")
  flightId String  @unique

  FlightStatus FlightStatus?
}
